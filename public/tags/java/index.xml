<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Adler Medrado&#39;s corner of the web</title>
    <link>http://localhost:1313/tags/java/</link>
    <description>Recent content in Java on Adler Medrado&#39;s corner of the web</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 03 Nov 2024 10:58:18 -0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding when to use stream() vs forEach() in Java</title>
      <link>http://localhost:1313/posts/stream-vs-foreach-in-java/</link>
      <pubDate>Sun, 03 Nov 2024 10:58:18 -0300</pubDate>
      <guid>http://localhost:1313/posts/stream-vs-foreach-in-java/</guid>
      <description>&lt;p&gt;In Java, choosing between Stream() and ForEach() depends on what you want to do with your data. While both are used to iterate over collections, each has its own strengths.&lt;/p&gt;&#xA;&lt;h2 id=&#34;stream&#34;&gt;stream()&lt;/h2&gt;&#xA;&lt;p&gt;Using stream() is powerful for complex data transformations, allowing operations like filtering, mapping, and reducing. It&amp;rsquo;s ideal for:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Transformations and filters: Use Stream() to apply operations like filtering, mapping, grouping, or reducing data.&lt;/li&gt;&#xA;&lt;li&gt;Chained processing: Apply multiple operations in a single chain.&lt;/li&gt;&#xA;&lt;li&gt;Parallel processing: For large datasets, use parallelStream() to leverage multi-core processors.&lt;/li&gt;&#xA;&lt;li&gt;Immutability: Streams avoid side effects, allowing new collections to be generated without changing the original.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;example&#34;&gt;Example:&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Arrays.&lt;span style=&#34;color:#a6e22e&#34;&gt;asList&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Maria&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;José&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;João&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; filteredNames &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; names.&lt;span style=&#34;color:#a6e22e&#34;&gt;stream&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(name &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; name.&lt;span style=&#34;color:#a6e22e&#34;&gt;startsWith&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;J&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;map&lt;/span&gt;(String::toUpperCase)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;collect&lt;/span&gt;(Collectors.&lt;span style=&#34;color:#a6e22e&#34;&gt;toList&lt;/span&gt;());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The results will be a new list only with the names started with &lt;em&gt;J&lt;/em&gt; in uppercase.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linguagens baseadas na JVM</title>
      <link>http://localhost:1313/posts/linguagens-baseadas-na-jvm/</link>
      <pubDate>Sun, 11 Oct 2015 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/linguagens-baseadas-na-jvm/</guid>
      <description>&lt;p&gt;Apesar de existirem muitas críticas à linguagem Java, é um fato que a JVM (Java Virtual Machine) é uma obra-prima.&lt;/p&gt;&#xA;&lt;p&gt;Muitas pessoas confundem a Java Virtual Machine com a linguagem Java e tratam tudo como se fosse uma coisa só, esse é o&#xA;tipo de ignorância que infelizmente é muito difundida por aí. Uma coisa é a linguagem Java ter suas deficiências (como&#xA;qualquer outra linguagem tem) e receber críticas por isso e outra coisa é a plataforma e ecossistema Java.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
